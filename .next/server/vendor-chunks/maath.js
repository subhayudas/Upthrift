"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/maath";
exports.ids = ["vendor-chunks/maath"];
exports.modules = {

/***/ "(ssr)/./node_modules/maath/dist/classCallCheck-9098b006.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/maath/dist/classCallCheck-9098b006.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _classCallCheck)\n/* harmony export */ });\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9jbGFzc0NhbGxDaGVjay05MDk4YjAwNi5lc20uanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLGdCQUFnQkMsUUFBUSxFQUFFQyxXQUFXO0lBQzVDLElBQUksQ0FBRUQsQ0FBQUEsb0JBQW9CQyxXQUFVLEdBQUk7UUFDdEMsTUFBTSxJQUFJQyxVQUFVO0lBQ3RCO0FBQ0Y7QUFFZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9VUHRocmlmdC8uL25vZGVfbW9kdWxlcy9tYWF0aC9kaXN0L2NsYXNzQ2FsbENoZWNrLTkwOThiMDA2LmVzbS5qcz9kNDM3Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHtcbiAgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uXCIpO1xuICB9XG59XG5cbmV4cG9ydCB7IF9jbGFzc0NhbGxDaGVjayBhcyBfIH07XG4iXSwibmFtZXMiOlsiX2NsYXNzQ2FsbENoZWNrIiwiaW5zdGFuY2UiLCJDb25zdHJ1Y3RvciIsIlR5cGVFcnJvciIsIl8iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/classCallCheck-9098b006.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/index-0332b2ed.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/maath/dist/index-0332b2ed.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   F: () => (/* binding */ FlashGen),\n/* harmony export */   G: () => (/* binding */ Generator),\n/* harmony export */   a: () => (/* binding */ inSphere),\n/* harmony export */   b: () => (/* binding */ inCircle),\n/* harmony export */   c: () => (/* binding */ onCircle),\n/* harmony export */   d: () => (/* binding */ inRect),\n/* harmony export */   e: () => (/* binding */ onRect),\n/* harmony export */   f: () => (/* binding */ inBox),\n/* harmony export */   g: () => (/* binding */ onBox),\n/* harmony export */   i: () => (/* binding */ index),\n/* harmony export */   n: () => (/* binding */ noise),\n/* harmony export */   o: () => (/* binding */ onSphere)\n/* harmony export */ });\n/* harmony import */ var _objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./objectSpread2-284232a6.esm.js */ \"(ssr)/./node_modules/maath/dist/objectSpread2-284232a6.esm.js\");\n/* harmony import */ var _classCallCheck_9098b006_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./classCallCheck-9098b006.esm.js */ \"(ssr)/./node_modules/maath/dist/classCallCheck-9098b006.esm.js\");\n/* harmony import */ var _misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./misc-19a3ec46.esm.js */ \"(ssr)/./node_modules/maath/dist/misc-19a3ec46.esm.js\");\n\n\n\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */ var Grad = function Grad(x, y, z) {\n    var _this = this;\n    (0,_classCallCheck_9098b006_esm_js__WEBPACK_IMPORTED_MODULE_1__._)(this, Grad);\n    (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"dot2\", function(x, y) {\n        return _this.x * x + _this.y * y;\n    });\n    (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"dot3\", function(x, y, z) {\n        return _this.x * x + _this.y * y + _this.z * z;\n    });\n    this.x = x;\n    this.y = y;\n    this.z = z;\n};\nvar grad3 = [\n    new Grad(1, 1, 0),\n    new Grad(-1, 1, 0),\n    new Grad(1, -1, 0),\n    new Grad(-1, -1, 0),\n    new Grad(1, 0, 1),\n    new Grad(-1, 0, 1),\n    new Grad(1, 0, -1),\n    new Grad(-1, 0, -1),\n    new Grad(0, 1, 1),\n    new Grad(0, -1, 1),\n    new Grad(0, 1, -1),\n    new Grad(0, -1, -1)\n];\nvar p = [\n    151,\n    160,\n    137,\n    91,\n    90,\n    15,\n    131,\n    13,\n    201,\n    95,\n    96,\n    53,\n    194,\n    233,\n    7,\n    225,\n    140,\n    36,\n    103,\n    30,\n    69,\n    142,\n    8,\n    99,\n    37,\n    240,\n    21,\n    10,\n    23,\n    190,\n    6,\n    148,\n    247,\n    120,\n    234,\n    75,\n    0,\n    26,\n    197,\n    62,\n    94,\n    252,\n    219,\n    203,\n    117,\n    35,\n    11,\n    32,\n    57,\n    177,\n    33,\n    88,\n    237,\n    149,\n    56,\n    87,\n    174,\n    20,\n    125,\n    136,\n    171,\n    168,\n    68,\n    175,\n    74,\n    165,\n    71,\n    134,\n    139,\n    48,\n    27,\n    166,\n    77,\n    146,\n    158,\n    231,\n    83,\n    111,\n    229,\n    122,\n    60,\n    211,\n    133,\n    230,\n    220,\n    105,\n    92,\n    41,\n    55,\n    46,\n    245,\n    40,\n    244,\n    102,\n    143,\n    54,\n    65,\n    25,\n    63,\n    161,\n    1,\n    216,\n    80,\n    73,\n    209,\n    76,\n    132,\n    187,\n    208,\n    89,\n    18,\n    169,\n    200,\n    196,\n    135,\n    130,\n    116,\n    188,\n    159,\n    86,\n    164,\n    100,\n    109,\n    198,\n    173,\n    186,\n    3,\n    64,\n    52,\n    217,\n    226,\n    250,\n    124,\n    123,\n    5,\n    202,\n    38,\n    147,\n    118,\n    126,\n    255,\n    82,\n    85,\n    212,\n    207,\n    206,\n    59,\n    227,\n    47,\n    16,\n    58,\n    17,\n    182,\n    189,\n    28,\n    42,\n    223,\n    183,\n    170,\n    213,\n    119,\n    248,\n    152,\n    2,\n    44,\n    154,\n    163,\n    70,\n    221,\n    153,\n    101,\n    155,\n    167,\n    43,\n    172,\n    9,\n    129,\n    22,\n    39,\n    253,\n    19,\n    98,\n    108,\n    110,\n    79,\n    113,\n    224,\n    232,\n    178,\n    185,\n    112,\n    104,\n    218,\n    246,\n    97,\n    228,\n    251,\n    34,\n    242,\n    193,\n    238,\n    210,\n    144,\n    12,\n    191,\n    179,\n    162,\n    241,\n    81,\n    51,\n    145,\n    235,\n    249,\n    14,\n    239,\n    107,\n    49,\n    192,\n    214,\n    31,\n    181,\n    199,\n    106,\n    157,\n    184,\n    84,\n    204,\n    176,\n    115,\n    121,\n    50,\n    45,\n    127,\n    4,\n    150,\n    254,\n    138,\n    236,\n    205,\n    93,\n    222,\n    114,\n    67,\n    29,\n    24,\n    72,\n    243,\n    141,\n    128,\n    195,\n    78,\n    66,\n    215,\n    61,\n    156,\n    180\n]; // To remove the need for index wrapping, double the permutation table length\nvar perm = new Array(512);\nvar gradP = new Array(512); // This isn't a very good seeding function, but it works ok. It supports 2^16\n// different seed values. Write something better if you need more seeds.\nvar seed = function seed(_seed) {\n    if (_seed > 0 && _seed < 1) {\n        // Scale the seed out\n        _seed *= 65536;\n    }\n    _seed = Math.floor(_seed);\n    if (_seed < 256) {\n        _seed |= _seed << 8;\n    }\n    for(var i = 0; i < 256; i++){\n        var v;\n        if (i & 1) {\n            v = p[i] ^ _seed & 255;\n        } else {\n            v = p[i] ^ _seed >> 8 & 255;\n        }\n        perm[i] = perm[i + 256] = v;\n        gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n};\nseed(0);\n/*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/ // Skewing and unskewing factors for 2, 3, and 4 dimensions\nvar F2 = 0.5 * (Math.sqrt(3) - 1);\nvar G2 = (3 - Math.sqrt(3)) / 6;\nvar F3 = 1 / 3;\nvar G3 = 1 / 6; // 2D simplex noise\nvar simplex2 = function simplex2(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin) * F2; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var t = (i + j) * G2;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t; // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if (x0 > y0) {\n        // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n        i1 = 1;\n        j1 = 0;\n    } else {\n        // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n        i1 = 0;\n        j1 = 1;\n    } // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2; // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n    var gi0 = gradP[i + perm[j]];\n    var gi1 = gradP[i + i1 + perm[j + j1]];\n    var gi2 = gradP[i + 1 + perm[j + 1]]; // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0 * x0 - y0 * y0;\n    if (t0 < 0) {\n        n0 = 0;\n    } else {\n        t0 *= t0;\n        n0 = t0 * t0 * gi0.dot2(x0, y0); // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1 * x1 - y1 * y1;\n    if (t1 < 0) {\n        n1 = 0;\n    } else {\n        t1 *= t1;\n        n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2 * x2 - y2 * y2;\n    if (t2 < 0) {\n        n2 = 0;\n    } else {\n        t2 *= t2;\n        n2 = t2 * t2 * gi2.dot2(x2, y2);\n    } // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n}; // 3D simplex noise\nvar simplex3 = function simplex3(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin + yin + zin) * F3; // Hairy factor for 2D\n    var i = Math.floor(xin + s);\n    var j = Math.floor(yin + s);\n    var k = Math.floor(zin + s);\n    var t = (i + j + k) * G3;\n    var x0 = xin - i + t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin - j + t;\n    var z0 = zin - k + t; // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if (x0 >= y0) {\n        if (y0 >= z0) {\n            i1 = 1;\n            j1 = 0;\n            k1 = 0;\n            i2 = 1;\n            j2 = 1;\n            k2 = 0;\n        } else if (x0 >= z0) {\n            i1 = 1;\n            j1 = 0;\n            k1 = 0;\n            i2 = 1;\n            j2 = 0;\n            k2 = 1;\n        } else {\n            i1 = 0;\n            j1 = 0;\n            k1 = 1;\n            i2 = 1;\n            j2 = 0;\n            k2 = 1;\n        }\n    } else {\n        if (y0 < z0) {\n            i1 = 0;\n            j1 = 0;\n            k1 = 1;\n            i2 = 0;\n            j2 = 1;\n            k2 = 1;\n        } else if (x0 < z0) {\n            i1 = 0;\n            j1 = 1;\n            k1 = 0;\n            i2 = 0;\n            j2 = 1;\n            k2 = 1;\n        } else {\n            i1 = 0;\n            j1 = 1;\n            k1 = 0;\n            i2 = 1;\n            j2 = 1;\n            k2 = 0;\n        }\n    } // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3; // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n    var gi0 = gradP[i + perm[j + perm[k]]];\n    var gi1 = gradP[i + i1 + perm[j + j1 + perm[k + k1]]];\n    var gi2 = gradP[i + i2 + perm[j + j2 + perm[k + k2]]];\n    var gi3 = gradP[i + 1 + perm[j + 1 + perm[k + 1]]]; // Calculate the contribution from the four corners\n    var t0 = 0.6 - x0 * x0 - y0 * y0 - z0 * z0;\n    if (t0 < 0) {\n        n0 = 0;\n    } else {\n        t0 *= t0;\n        n0 = t0 * t0 * gi0.dot3(x0, y0, z0); // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.6 - x1 * x1 - y1 * y1 - z1 * z1;\n    if (t1 < 0) {\n        n1 = 0;\n    } else {\n        t1 *= t1;\n        n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.6 - x2 * x2 - y2 * y2 - z2 * z2;\n    if (t2 < 0) {\n        n2 = 0;\n    } else {\n        t2 *= t2;\n        n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.6 - x3 * x3 - y3 * y3 - z3 * z3;\n    if (t3 < 0) {\n        n3 = 0;\n    } else {\n        t3 *= t3;\n        n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    } // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n}; // ##### Perlin noise stuff\n// 2D Perlin Noise\nvar perlin2 = function perlin2(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y); // Get relative xy coordinates of point within that cell\n    x = x - X;\n    y = y - Y; // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255; // Calculate noise contributions from each of the four corners\n    var n00 = gradP[X + perm[Y]].dot2(x, y);\n    var n01 = gradP[X + perm[Y + 1]].dot2(x, y - 1);\n    var n10 = gradP[X + 1 + perm[Y]].dot2(x - 1, y);\n    var n11 = gradP[X + 1 + perm[Y + 1]].dot2(x - 1, y - 1); // Compute the fade curve value for x\n    var u = (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(x); // Interpolate the four results\n    return (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)((0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(n00, n10, u), (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(n01, n11, u), (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(y));\n}; // 3D Perlin Noise\nvar perlin3 = function perlin3(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z); // Get relative xyz coordinates of point within that cell\n    x = x - X;\n    y = y - Y;\n    z = z - Z; // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255;\n    Y = Y & 255;\n    Z = Z & 255; // Calculate noise contributions from each of the eight corners\n    var n000 = gradP[X + perm[Y + perm[Z]]].dot3(x, y, z);\n    var n001 = gradP[X + perm[Y + perm[Z + 1]]].dot3(x, y, z - 1);\n    var n010 = gradP[X + perm[Y + 1 + perm[Z]]].dot3(x, y - 1, z);\n    var n011 = gradP[X + perm[Y + 1 + perm[Z + 1]]].dot3(x, y - 1, z - 1);\n    var n100 = gradP[X + 1 + perm[Y + perm[Z]]].dot3(x - 1, y, z);\n    var n101 = gradP[X + 1 + perm[Y + perm[Z + 1]]].dot3(x - 1, y, z - 1);\n    var n110 = gradP[X + 1 + perm[Y + 1 + perm[Z]]].dot3(x - 1, y - 1, z);\n    var n111 = gradP[X + 1 + perm[Y + 1 + perm[Z + 1]]].dot3(x - 1, y - 1, z - 1); // Compute the fade curve value for x, y, z\n    var u = (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(x);\n    var v = (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(y);\n    var w = (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.f)(z); // Interpolate\n    return (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)((0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)((0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(n000, n100, u), (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(n001, n101, u), w), (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)((0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(n010, n110, u), (0,_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_2__.l)(n011, n111, u), w), v);\n};\nvar noise = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    seed: seed,\n    simplex2: simplex2,\n    simplex3: simplex3,\n    perlin2: perlin2,\n    perlin3: perlin3\n});\nvar TAU = Math.PI * 2;\nvar FlashGen = /*#__PURE__*/ function() {\n    function FlashGen(props) {\n        (0,_classCallCheck_9098b006_esm_js__WEBPACK_IMPORTED_MODULE_1__._)(this, FlashGen);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"nextBurstTime\", 0);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"nextFlashEndTime\", 0);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"flashesDone\", 0);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"isFlashing\", false);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"currentCount\", 0);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"flashIntensity\", 0);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"isDecaying\", false);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"autoBurst\", true);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"decaySpeed\", 40);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"minInterval\", 5000);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"maxInterval\", 10000);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"minDuration\", 50);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"maxDuration\", 300);\n        (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"count\", 5);\n        Object.assign(this, props);\n    }\n    _createClass(FlashGen, [\n        {\n            key: \"scheduleNextBurst\",\n            value: function scheduleNextBurst(currentTime) {\n                var burstInterval = Math.random() * (this.maxInterval - this.minInterval) + this.minInterval;\n                this.nextBurstTime = currentTime + burstInterval / 1000;\n                this.flashesDone = 0;\n                this.isFlashing = false;\n            }\n        },\n        {\n            key: \"burst\",\n            value: function burst() {\n                this.nextBurstTime = 0;\n                this.flashesDone = 0;\n                this.isFlashing = false;\n            }\n        },\n        {\n            key: \"update\",\n            value: function update(currentTime, delta) {\n                if (currentTime > this.nextBurstTime && this.currentCount === 0) {\n                    this.currentCount = Math.floor(Math.random() * this.count) + 1;\n                }\n                if (this.flashesDone < this.currentCount && currentTime > this.nextBurstTime) {\n                    if (!this.isFlashing) {\n                        this.isFlashing = true;\n                        this.flashIntensity = 1;\n                        var flashDuration = Math.random() * (this.maxDuration - this.minDuration) + this.minDuration;\n                        this.nextFlashEndTime = currentTime + flashDuration / 1000;\n                    } else if (this.isFlashing && currentTime > this.nextFlashEndTime) {\n                        this.isFlashing = false;\n                        this.isDecaying = true;\n                        this.flashesDone++;\n                        if (this.flashesDone >= this.currentCount) {\n                            this.currentCount = 0;\n                            if (this.autoBurst) this.scheduleNextBurst(currentTime);\n                        }\n                    }\n                }\n                if (this.isDecaying) {\n                    this.flashIntensity -= delta * this.decaySpeed;\n                    this.flashIntensity = Math.max(0, Math.min(1, this.flashIntensity));\n                    if (this.flashIntensity <= 0) {\n                        this.isDecaying = false;\n                        this.flashIntensity = 0;\n                    }\n                }\n                return this.flashIntensity;\n            }\n        }\n    ]);\n    return FlashGen;\n}(); // Credits @kchapelier https://github.com/kchapelier/wavefunctioncollapse/blob/master/example/lcg.js#L22-L30\nfunction normalizeSeed(seed) {\n    if (typeof seed === \"number\") {\n        seed = Math.abs(seed);\n    } else if (typeof seed === \"string\") {\n        var string = seed;\n        seed = 0;\n        for(var i = 0; i < string.length; i++){\n            seed = (seed + (i + 1) * (string.charCodeAt(i) % 96)) % 2147483647;\n        }\n    }\n    if (seed === 0) {\n        seed = 311;\n    }\n    return seed;\n}\nfunction lcgRandom(seed) {\n    var state = normalizeSeed(seed);\n    return function() {\n        var result = state * 48271 % 2147483647;\n        state = result;\n        return result / 2147483647;\n    };\n}\nvar Generator = function Generator(_seed) {\n    var _this = this;\n    (0,_classCallCheck_9098b006_esm_js__WEBPACK_IMPORTED_MODULE_1__._)(this, Generator);\n    (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"seed\", 0);\n    (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"init\", function(seed) {\n        _this.seed = seed;\n        _this.value = lcgRandom(seed);\n    });\n    (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(this, \"value\", lcgRandom(this.seed));\n    this.init(_seed);\n};\nvar defaultGen = new Generator(Math.random());\n/***\n * [3D] Sphere\n */ var defaultSphere = {\n    radius: 1,\n    center: [\n        0,\n        0,\n        0\n    ]\n}; // random on surface of sphere\n// - https://twitter.com/fermatslibrary/status/1430932503578226688\n// - https://mathworld.wolfram.com/SpherePointPicking.html\nfunction onSphere(buffer, sphere) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultSphere$sphere = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultSphere), sphere), radius = _defaultSphere$sphere.radius, center = _defaultSphere$sphere.center;\n    for(var i = 0; i < buffer.length; i += 3){\n        var u = rng.value();\n        var v = rng.value();\n        var theta = Math.acos(2 * v - 1);\n        var phi = TAU * u;\n        buffer[i] = Math.sin(theta) * Math.cos(phi) * radius + center[0];\n        buffer[i + 1] = Math.sin(theta) * Math.sin(phi) * radius + center[1];\n        buffer[i + 2] = Math.cos(theta) * radius + center[2];\n    }\n    return buffer;\n} // from \"Another Method\" https://datagenetics.com/blog/january32020/index.html\nfunction inSphere(buffer, sphere) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultSphere$sphere2 = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultSphere), sphere), radius = _defaultSphere$sphere2.radius, center = _defaultSphere$sphere2.center;\n    for(var i = 0; i < buffer.length; i += 3){\n        var u = Math.pow(rng.value(), 1 / 3);\n        var x = rng.value() * 2 - 1;\n        var y = rng.value() * 2 - 1;\n        var z = rng.value() * 2 - 1;\n        var mag = Math.sqrt(x * x + y * y + z * z);\n        x = u * x / mag;\n        y = u * y / mag;\n        z = u * z / mag;\n        buffer[i] = x * radius + center[0];\n        buffer[i + 1] = y * radius + center[1];\n        buffer[i + 2] = z * radius + center[2];\n    }\n    return buffer;\n}\n/***\n * [2D] Circle\n */ var defaultCircle = {\n    radius: 1,\n    center: [\n        0,\n        0\n    ]\n}; // random circle https://stackoverflow.com/a/50746409\nfunction inCircle(buffer, circle) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultCircle$circle = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultCircle), circle), radius = _defaultCircle$circle.radius, center = _defaultCircle$circle.center;\n    for(var i = 0; i < buffer.length; i += 2){\n        var r = radius * Math.sqrt(rng.value());\n        var theta = rng.value() * TAU;\n        buffer[i] = Math.sin(theta) * r + center[0];\n        buffer[i + 1] = Math.cos(theta) * r + center[1];\n    }\n    return buffer;\n}\nfunction onCircle(buffer, circle) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultCircle$circle2 = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultCircle), circle), radius = _defaultCircle$circle2.radius, center = _defaultCircle$circle2.center;\n    for(var i = 0; i < buffer.length; i += 2){\n        var theta = rng.value() * TAU;\n        buffer[i] = Math.sin(theta) * radius + center[0];\n        buffer[i + 1] = Math.cos(theta) * radius + center[1];\n    }\n    return buffer;\n}\n/**\n * [2D] Plane\n */ var defaultRect = {\n    sides: 1,\n    center: [\n        0,\n        0\n    ]\n};\nfunction inRect(buffer, rect) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultRect$rect = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultRect), rect), sides = _defaultRect$rect.sides, center = _defaultRect$rect.center;\n    var sideX = typeof sides === \"number\" ? sides : sides[0];\n    var sideY = typeof sides === \"number\" ? sides : sides[1];\n    for(var i = 0; i < buffer.length; i += 2){\n        buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n        buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n    }\n    return buffer;\n}\nfunction onRect(buffer, rect) {\n    return buffer;\n}\n/***\n * [3D] Box\n */ function inBox(buffer, box) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultBox$box = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultBox), box), sides = _defaultBox$box.sides, center = _defaultBox$box.center;\n    var sideX = typeof sides === \"number\" ? sides : sides[0];\n    var sideY = typeof sides === \"number\" ? sides : sides[1];\n    var sideZ = typeof sides === \"number\" ? sides : sides[2];\n    for(var i = 0; i < buffer.length; i += 3){\n        buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n        buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n        buffer[i + 2] = (rng.value() - 0.5) * sideZ + center[2];\n    }\n    return buffer;\n}\nvar defaultBox = {\n    sides: 1,\n    center: [\n        0,\n        0,\n        0\n    ]\n};\nfunction onBox(buffer, box) {\n    var rng = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultGen;\n    var _defaultBox$box2 = (0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)((0,_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__._)({}, defaultBox), box), sides = _defaultBox$box2.sides, center = _defaultBox$box2.center;\n    var sideX = typeof sides === \"number\" ? sides : sides[0];\n    var sideY = typeof sides === \"number\" ? sides : sides[1];\n    var sideZ = typeof sides === \"number\" ? sides : sides[2];\n    for(var i = 0; i < buffer.length; i += 3){\n        buffer[i] = (rng.value() - 0.5) * sideX + center[0];\n        buffer[i + 1] = (rng.value() - 0.5) * sideY + center[1];\n        buffer[i + 2] = (rng.value() - 0.5) * sideZ + center[2];\n    }\n    return buffer;\n}\nvar index = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    FlashGen: FlashGen,\n    Generator: Generator,\n    onSphere: onSphere,\n    inSphere: inSphere,\n    inCircle: inCircle,\n    onCircle: onCircle,\n    inRect: inRect,\n    onRect: onRect,\n    inBox: inBox,\n    onBox: onBox,\n    noise: noise\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/index-0332b2ed.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-5594d075.esm.js":
/*!**************************************************************************!*\
  !*** ./node_modules/maath/dist/isNativeReflectConstruct-5594d075.esm.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _setPrototypeOf),\n/* harmony export */   a: () => (/* binding */ _isNativeReflectConstruct)\n/* harmony export */ });\nfunction _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QtNTU5NGQwNzUuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsU0FBU0EsZ0JBQWdCQyxDQUFDLEVBQUVDLENBQUM7SUFDM0JGLGtCQUFrQkcsT0FBT0MsY0FBYyxJQUFJLFNBQVNKLGdCQUFnQkMsQ0FBQyxFQUFFQyxDQUFDO1FBQ3RFRCxFQUFFSSxTQUFTLEdBQUdIO1FBQ2QsT0FBT0Q7SUFDVDtJQUVBLE9BQU9ELGdCQUFnQkMsR0FBR0M7QUFDNUI7QUFFQSxTQUFTSTtJQUNQLElBQUksT0FBT0MsWUFBWSxlQUFlLENBQUNBLFFBQVFDLFNBQVMsRUFBRSxPQUFPO0lBQ2pFLElBQUlELFFBQVFDLFNBQVMsQ0FBQ0MsSUFBSSxFQUFFLE9BQU87SUFDbkMsSUFBSSxPQUFPQyxVQUFVLFlBQVksT0FBTztJQUV4QyxJQUFJO1FBQ0ZDLFFBQVFDLFNBQVMsQ0FBQ0MsT0FBTyxDQUFDQyxJQUFJLENBQUNQLFFBQVFDLFNBQVMsQ0FBQ0csU0FBUyxFQUFFLEVBQUUsWUFBYTtRQUMzRSxPQUFPO0lBQ1QsRUFBRSxPQUFPSSxHQUFHO1FBQ1YsT0FBTztJQUNUO0FBQ0Y7QUFFZ0UiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9VUHRocmlmdC8uL25vZGVfbW9kdWxlcy9tYWF0aC9kaXN0L2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdC01NTk0ZDA3NS5lc20uanM/MzY1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfc2V0UHJvdG90eXBlT2YobywgcCkge1xuICBfc2V0UHJvdG90eXBlT2YgPSBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgZnVuY3Rpb24gX3NldFByb3RvdHlwZU9mKG8sIHApIHtcbiAgICBvLl9fcHJvdG9fXyA9IHA7XG4gICAgcmV0dXJuIG87XG4gIH07XG5cbiAgcmV0dXJuIF9zZXRQcm90b3R5cGVPZihvLCBwKTtcbn1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHtcbiAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlO1xuICBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlO1xuXG4gIHRyeSB7XG4gICAgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG59XG5cbmV4cG9ydCB7IF9zZXRQcm90b3R5cGVPZiBhcyBfLCBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0IGFzIGEgfTtcbiJdLCJuYW1lcyI6WyJfc2V0UHJvdG90eXBlT2YiLCJvIiwicCIsIk9iamVjdCIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJzaGFtIiwiUHJveHkiLCJCb29sZWFuIiwicHJvdG90eXBlIiwidmFsdWVPZiIsImNhbGwiLCJlIiwiXyIsImEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-5594d075.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/matrix-baa530bf.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/maath/dist/matrix-baa530bf.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ matrixSum3),\n/* harmony export */   b: () => (/* binding */ determinant2),\n/* harmony export */   c: () => (/* binding */ determinant4),\n/* harmony export */   d: () => (/* binding */ determinant3),\n/* harmony export */   g: () => (/* binding */ getMinor),\n/* harmony export */   m: () => (/* binding */ matrix)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n\n/**\n *\n * @param terms\n *\n * | a b |\n * | c d |\n *\n * @returns {number} determinant\n */ function determinant2() {\n    for(var _len = arguments.length, terms = new Array(_len), _key = 0; _key < _len; _key++){\n        terms[_key] = arguments[_key];\n    }\n    var a = terms[0], b = terms[1], c = terms[2], d = terms[3];\n    return a * d - b * c;\n}\n/**\n *\n * @param terms\n *\n * | a b c |\n * | d e f |\n * | g h i |\n *\n * @returns {number} determinant\n */ function determinant3() {\n    for(var _len2 = arguments.length, terms = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n        terms[_key2] = arguments[_key2];\n    }\n    var a = terms[0], b = terms[1], c = terms[2], d = terms[3], e = terms[4], f = terms[5], g = terms[6], h = terms[7], i = terms[8];\n    return a * e * i + b * f * g + c * d * h - c * e * g - b * d * i - a * f * h;\n}\n/**\n *\n * @param terms\n *\n * | a b c g |\n * | h i j k |\n * | l m n o |\n *\n * @returns {number} determinant\n */ function determinant4() {\n    for(var _len3 = arguments.length, terms = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++){\n        terms[_key3] = arguments[_key3];\n    }\n    terms[0];\n    terms[1];\n    terms[2];\n    terms[3];\n    terms[4];\n    terms[5];\n    terms[6];\n    terms[7];\n    terms[8];\n    terms[9];\n    terms[10];\n    terms[11];\n    terms[12];\n    terms[13];\n    terms[14]; // TODO\n}\n/**\n *\n * Get the determinant of matrix m without row r and col c\n *\n * @param {matrix} m Starter matrix\n * @param r row to remove\n * @param c col to remove\n *\n *     | a b c |\n * m = | d e f |\n *     | g h i |\n *\n * getMinor(m, 1, 1) would result in this determinant\n *\n * | a c |\n * | g i |\n *\n * @returns {number} determinant\n */ function getMinor(matrix, r, c) {\n    var _matrixTranspose = matrix.clone().transpose();\n    var x = [];\n    var l = _matrixTranspose.elements.length;\n    var n = Math.sqrt(l);\n    for(var i = 0; i < l; i++){\n        var element = _matrixTranspose.elements[i];\n        var row = Math.floor(i / n);\n        var col = i % n;\n        if (row !== r - 1 && col !== c - 1) {\n            x.push(element);\n        }\n    }\n    return determinant3.apply(void 0, x);\n}\n/**\n *\n */ function matrixSum3(m1, m2) {\n    var sum = [];\n    var m1Array = m1.toArray();\n    var m2Array = m2.toArray();\n    for(var i = 0; i < m1Array.length; i++){\n        sum[i] = m1Array[i] + m2Array[i];\n    }\n    return new three__WEBPACK_IMPORTED_MODULE_0__.Matrix3().fromArray(sum);\n}\nvar matrix = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    determinant2: determinant2,\n    determinant3: determinant3,\n    determinant4: determinant4,\n    getMinor: getMinor,\n    matrixSum3: matrixSum3\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9tYXRyaXgtYmFhNTMwYmYuZXNtLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBZ0M7QUFFaEM7Ozs7Ozs7O0NBUUMsR0FFRCxTQUFTQztJQUNQLElBQUssSUFBSUMsT0FBT0MsVUFBVUMsTUFBTSxFQUFFQyxRQUFRLElBQUlDLE1BQU1KLE9BQU9LLE9BQU8sR0FBR0EsT0FBT0wsTUFBTUssT0FBUTtRQUN4RkYsS0FBSyxDQUFDRSxLQUFLLEdBQUdKLFNBQVMsQ0FBQ0ksS0FBSztJQUMvQjtJQUVBLElBQUlDLElBQUlILEtBQUssQ0FBQyxFQUFFLEVBQ1pJLElBQUlKLEtBQUssQ0FBQyxFQUFFLEVBQ1pLLElBQUlMLEtBQUssQ0FBQyxFQUFFLEVBQ1pNLElBQUlOLEtBQUssQ0FBQyxFQUFFO0lBQ2hCLE9BQU9HLElBQUlHLElBQUlGLElBQUlDO0FBQ3JCO0FBQ0E7Ozs7Ozs7OztDQVNDLEdBRUQsU0FBU0U7SUFDUCxJQUFLLElBQUlDLFFBQVFWLFVBQVVDLE1BQU0sRUFBRUMsUUFBUSxJQUFJQyxNQUFNTyxRQUFRQyxRQUFRLEdBQUdBLFFBQVFELE9BQU9DLFFBQVM7UUFDOUZULEtBQUssQ0FBQ1MsTUFBTSxHQUFHWCxTQUFTLENBQUNXLE1BQU07SUFDakM7SUFFQSxJQUFJTixJQUFJSCxLQUFLLENBQUMsRUFBRSxFQUNaSSxJQUFJSixLQUFLLENBQUMsRUFBRSxFQUNaSyxJQUFJTCxLQUFLLENBQUMsRUFBRSxFQUNaTSxJQUFJTixLQUFLLENBQUMsRUFBRSxFQUNaVSxJQUFJVixLQUFLLENBQUMsRUFBRSxFQUNaVyxJQUFJWCxLQUFLLENBQUMsRUFBRSxFQUNaWSxJQUFJWixLQUFLLENBQUMsRUFBRSxFQUNaYSxJQUFJYixLQUFLLENBQUMsRUFBRSxFQUNaYyxJQUFJZCxLQUFLLENBQUMsRUFBRTtJQUNoQixPQUFPRyxJQUFJTyxJQUFJSSxJQUFJVixJQUFJTyxJQUFJQyxJQUFJUCxJQUFJQyxJQUFJTyxJQUFJUixJQUFJSyxJQUFJRSxJQUFJUixJQUFJRSxJQUFJUSxJQUFJWCxJQUFJUSxJQUFJRTtBQUM3RTtBQUNBOzs7Ozs7Ozs7Q0FTQyxHQUVELFNBQVNFO0lBQ1AsSUFBSyxJQUFJQyxRQUFRbEIsVUFBVUMsTUFBTSxFQUFFQyxRQUFRLElBQUlDLE1BQU1lLFFBQVFDLFFBQVEsR0FBR0EsUUFBUUQsT0FBT0MsUUFBUztRQUM5RmpCLEtBQUssQ0FBQ2lCLE1BQU0sR0FBR25CLFNBQVMsQ0FBQ21CLE1BQU07SUFDakM7SUFFQWpCLEtBQUssQ0FBQyxFQUFFO0lBQ0pBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxFQUFFO0lBQ1JBLEtBQUssQ0FBQyxHQUFHO0lBQ1RBLEtBQUssQ0FBQyxHQUFHO0lBQ1RBLEtBQUssQ0FBQyxHQUFHO0lBQ1RBLEtBQUssQ0FBQyxHQUFHO0lBQ1RBLEtBQUssQ0FBQyxHQUFHLEVBQUUsT0FBTztBQUN4QjtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Q0FrQkMsR0FFRCxTQUFTa0IsU0FBU0MsTUFBTSxFQUFFQyxDQUFDLEVBQUVmLENBQUM7SUFDNUIsSUFBSWdCLG1CQUFtQkYsT0FBT0csS0FBSyxHQUFHQyxTQUFTO0lBRS9DLElBQUlDLElBQUksRUFBRTtJQUNWLElBQUlDLElBQUlKLGlCQUFpQkssUUFBUSxDQUFDM0IsTUFBTTtJQUN4QyxJQUFJNEIsSUFBSUMsS0FBS0MsSUFBSSxDQUFDSjtJQUVsQixJQUFLLElBQUlYLElBQUksR0FBR0EsSUFBSVcsR0FBR1gsSUFBSztRQUMxQixJQUFJZ0IsVUFBVVQsaUJBQWlCSyxRQUFRLENBQUNaLEVBQUU7UUFDMUMsSUFBSWlCLE1BQU1ILEtBQUtJLEtBQUssQ0FBQ2xCLElBQUlhO1FBQ3pCLElBQUlNLE1BQU1uQixJQUFJYTtRQUVkLElBQUlJLFFBQVFYLElBQUksS0FBS2EsUUFBUTVCLElBQUksR0FBRztZQUNsQ21CLEVBQUVVLElBQUksQ0FBQ0o7UUFDVDtJQUNGO0lBRUEsT0FBT3ZCLGFBQWE0QixLQUFLLENBQUMsS0FBSyxHQUFHWDtBQUNwQztBQUNBOztDQUVDLEdBRUQsU0FBU1ksV0FBV0MsRUFBRSxFQUFFQyxFQUFFO0lBQ3hCLElBQUlDLE1BQU0sRUFBRTtJQUNaLElBQUlDLFVBQVVILEdBQUdJLE9BQU87SUFDeEIsSUFBSUMsVUFBVUosR0FBR0csT0FBTztJQUV4QixJQUFLLElBQUkzQixJQUFJLEdBQUdBLElBQUkwQixRQUFRekMsTUFBTSxFQUFFZSxJQUFLO1FBQ3ZDeUIsR0FBRyxDQUFDekIsRUFBRSxHQUFHMEIsT0FBTyxDQUFDMUIsRUFBRSxHQUFHNEIsT0FBTyxDQUFDNUIsRUFBRTtJQUNsQztJQUVBLE9BQU8sSUFBSW5CLDBDQUFPQSxHQUFHZ0QsU0FBUyxDQUFDSjtBQUNqQztBQUVBLElBQUlwQixTQUFTLFdBQVcsR0FBRXlCLE9BQU9DLE1BQU0sQ0FBQztJQUN0Q0MsV0FBVztJQUNYbEQsY0FBY0E7SUFDZFcsY0FBY0E7SUFDZFEsY0FBY0E7SUFDZEcsVUFBVUE7SUFDVmtCLFlBQVlBO0FBQ2Q7QUFFZ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9VUHRocmlmdC8uL25vZGVfbW9kdWxlcy9tYWF0aC9kaXN0L21hdHJpeC1iYWE1MzBiZi5lc20uanM/OWFiYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXRyaXgzIH0gZnJvbSAndGhyZWUnO1xuXG4vKipcbiAqXG4gKiBAcGFyYW0gdGVybXNcbiAqXG4gKiB8IGEgYiB8XG4gKiB8IGMgZCB8XG4gKlxuICogQHJldHVybnMge251bWJlcn0gZGV0ZXJtaW5hbnRcbiAqL1xuXG5mdW5jdGlvbiBkZXRlcm1pbmFudDIoKSB7XG4gIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCB0ZXJtcyA9IG5ldyBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICB0ZXJtc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHZhciBhID0gdGVybXNbMF0sXG4gICAgICBiID0gdGVybXNbMV0sXG4gICAgICBjID0gdGVybXNbMl0sXG4gICAgICBkID0gdGVybXNbM107XG4gIHJldHVybiBhICogZCAtIGIgKiBjO1xufVxuLyoqXG4gKlxuICogQHBhcmFtIHRlcm1zXG4gKlxuICogfCBhIGIgYyB8XG4gKiB8IGQgZSBmIHxcbiAqIHwgZyBoIGkgfFxuICpcbiAqIEByZXR1cm5zIHtudW1iZXJ9IGRldGVybWluYW50XG4gKi9cblxuZnVuY3Rpb24gZGV0ZXJtaW5hbnQzKCkge1xuICBmb3IgKHZhciBfbGVuMiA9IGFyZ3VtZW50cy5sZW5ndGgsIHRlcm1zID0gbmV3IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgdGVybXNbX2tleTJdID0gYXJndW1lbnRzW19rZXkyXTtcbiAgfVxuXG4gIHZhciBhID0gdGVybXNbMF0sXG4gICAgICBiID0gdGVybXNbMV0sXG4gICAgICBjID0gdGVybXNbMl0sXG4gICAgICBkID0gdGVybXNbM10sXG4gICAgICBlID0gdGVybXNbNF0sXG4gICAgICBmID0gdGVybXNbNV0sXG4gICAgICBnID0gdGVybXNbNl0sXG4gICAgICBoID0gdGVybXNbN10sXG4gICAgICBpID0gdGVybXNbOF07XG4gIHJldHVybiBhICogZSAqIGkgKyBiICogZiAqIGcgKyBjICogZCAqIGggLSBjICogZSAqIGcgLSBiICogZCAqIGkgLSBhICogZiAqIGg7XG59XG4vKipcbiAqXG4gKiBAcGFyYW0gdGVybXNcbiAqXG4gKiB8IGEgYiBjIGcgfFxuICogfCBoIGkgaiBrIHxcbiAqIHwgbCBtIG4gbyB8XG4gKlxuICogQHJldHVybnMge251bWJlcn0gZGV0ZXJtaW5hbnRcbiAqL1xuXG5mdW5jdGlvbiBkZXRlcm1pbmFudDQoKSB7XG4gIGZvciAodmFyIF9sZW4zID0gYXJndW1lbnRzLmxlbmd0aCwgdGVybXMgPSBuZXcgQXJyYXkoX2xlbjMpLCBfa2V5MyA9IDA7IF9rZXkzIDwgX2xlbjM7IF9rZXkzKyspIHtcbiAgICB0ZXJtc1tfa2V5M10gPSBhcmd1bWVudHNbX2tleTNdO1xuICB9XG5cbiAgdGVybXNbMF07XG4gICAgICB0ZXJtc1sxXTtcbiAgICAgIHRlcm1zWzJdO1xuICAgICAgdGVybXNbM107XG4gICAgICB0ZXJtc1s0XTtcbiAgICAgIHRlcm1zWzVdO1xuICAgICAgdGVybXNbNl07XG4gICAgICB0ZXJtc1s3XTtcbiAgICAgIHRlcm1zWzhdO1xuICAgICAgdGVybXNbOV07XG4gICAgICB0ZXJtc1sxMF07XG4gICAgICB0ZXJtc1sxMV07XG4gICAgICB0ZXJtc1sxMl07XG4gICAgICB0ZXJtc1sxM107XG4gICAgICB0ZXJtc1sxNF07IC8vIFRPRE9cbn1cbi8qKlxuICpcbiAqIEdldCB0aGUgZGV0ZXJtaW5hbnQgb2YgbWF0cml4IG0gd2l0aG91dCByb3cgciBhbmQgY29sIGNcbiAqXG4gKiBAcGFyYW0ge21hdHJpeH0gbSBTdGFydGVyIG1hdHJpeFxuICogQHBhcmFtIHIgcm93IHRvIHJlbW92ZVxuICogQHBhcmFtIGMgY29sIHRvIHJlbW92ZVxuICpcbiAqICAgICB8IGEgYiBjIHxcbiAqIG0gPSB8IGQgZSBmIHxcbiAqICAgICB8IGcgaCBpIHxcbiAqXG4gKiBnZXRNaW5vcihtLCAxLCAxKSB3b3VsZCByZXN1bHQgaW4gdGhpcyBkZXRlcm1pbmFudFxuICpcbiAqIHwgYSBjIHxcbiAqIHwgZyBpIHxcbiAqXG4gKiBAcmV0dXJucyB7bnVtYmVyfSBkZXRlcm1pbmFudFxuICovXG5cbmZ1bmN0aW9uIGdldE1pbm9yKG1hdHJpeCwgciwgYykge1xuICB2YXIgX21hdHJpeFRyYW5zcG9zZSA9IG1hdHJpeC5jbG9uZSgpLnRyYW5zcG9zZSgpO1xuXG4gIHZhciB4ID0gW107XG4gIHZhciBsID0gX21hdHJpeFRyYW5zcG9zZS5lbGVtZW50cy5sZW5ndGg7XG4gIHZhciBuID0gTWF0aC5zcXJ0KGwpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbDsgaSsrKSB7XG4gICAgdmFyIGVsZW1lbnQgPSBfbWF0cml4VHJhbnNwb3NlLmVsZW1lbnRzW2ldO1xuICAgIHZhciByb3cgPSBNYXRoLmZsb29yKGkgLyBuKTtcbiAgICB2YXIgY29sID0gaSAlIG47XG5cbiAgICBpZiAocm93ICE9PSByIC0gMSAmJiBjb2wgIT09IGMgLSAxKSB7XG4gICAgICB4LnB1c2goZWxlbWVudCk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGRldGVybWluYW50My5hcHBseSh2b2lkIDAsIHgpO1xufVxuLyoqXG4gKlxuICovXG5cbmZ1bmN0aW9uIG1hdHJpeFN1bTMobTEsIG0yKSB7XG4gIHZhciBzdW0gPSBbXTtcbiAgdmFyIG0xQXJyYXkgPSBtMS50b0FycmF5KCk7XG4gIHZhciBtMkFycmF5ID0gbTIudG9BcnJheSgpO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbTFBcnJheS5sZW5ndGg7IGkrKykge1xuICAgIHN1bVtpXSA9IG0xQXJyYXlbaV0gKyBtMkFycmF5W2ldO1xuICB9XG5cbiAgcmV0dXJuIG5ldyBNYXRyaXgzKCkuZnJvbUFycmF5KHN1bSk7XG59XG5cbnZhciBtYXRyaXggPSAvKiNfX1BVUkVfXyovT2JqZWN0LmZyZWV6ZSh7XG4gIF9fcHJvdG9fXzogbnVsbCxcbiAgZGV0ZXJtaW5hbnQyOiBkZXRlcm1pbmFudDIsXG4gIGRldGVybWluYW50MzogZGV0ZXJtaW5hbnQzLFxuICBkZXRlcm1pbmFudDQ6IGRldGVybWluYW50NCxcbiAgZ2V0TWlub3I6IGdldE1pbm9yLFxuICBtYXRyaXhTdW0zOiBtYXRyaXhTdW0zXG59KTtcblxuZXhwb3J0IHsgbWF0cml4U3VtMyBhcyBhLCBkZXRlcm1pbmFudDIgYXMgYiwgZGV0ZXJtaW5hbnQ0IGFzIGMsIGRldGVybWluYW50MyBhcyBkLCBnZXRNaW5vciBhcyBnLCBtYXRyaXggYXMgbSB9O1xuIl0sIm5hbWVzIjpbIk1hdHJpeDMiLCJkZXRlcm1pbmFudDIiLCJfbGVuIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidGVybXMiLCJBcnJheSIsIl9rZXkiLCJhIiwiYiIsImMiLCJkIiwiZGV0ZXJtaW5hbnQzIiwiX2xlbjIiLCJfa2V5MiIsImUiLCJmIiwiZyIsImgiLCJpIiwiZGV0ZXJtaW5hbnQ0IiwiX2xlbjMiLCJfa2V5MyIsImdldE1pbm9yIiwibWF0cml4IiwiciIsIl9tYXRyaXhUcmFuc3Bvc2UiLCJjbG9uZSIsInRyYW5zcG9zZSIsIngiLCJsIiwiZWxlbWVudHMiLCJuIiwiTWF0aCIsInNxcnQiLCJlbGVtZW50Iiwicm93IiwiZmxvb3IiLCJjb2wiLCJwdXNoIiwiYXBwbHkiLCJtYXRyaXhTdW0zIiwibTEiLCJtMiIsInN1bSIsIm0xQXJyYXkiLCJ0b0FycmF5IiwibTJBcnJheSIsImZyb21BcnJheSIsIk9iamVjdCIsImZyZWV6ZSIsIl9fcHJvdG9fXyIsIm0iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/matrix-baa530bf.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/misc-19a3ec46.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/maath/dist/misc-19a3ec46.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   a: () => (/* binding */ degToRad),\n/* harmony export */   b: () => (/* binding */ radToDeg),\n/* harmony export */   c: () => (/* binding */ clamp),\n/* harmony export */   d: () => (/* binding */ deltaAngle),\n/* harmony export */   e: () => (/* binding */ fibonacciOnSphere),\n/* harmony export */   f: () => (/* binding */ fade),\n/* harmony export */   g: () => (/* binding */ lexicographic),\n/* harmony export */   h: () => (/* binding */ convexHull),\n/* harmony export */   i: () => (/* binding */ remap),\n/* harmony export */   j: () => (/* binding */ inverseLerp),\n/* harmony export */   k: () => (/* binding */ rotateVectorOnVector),\n/* harmony export */   l: () => (/* binding */ lerp),\n/* harmony export */   m: () => (/* binding */ misc),\n/* harmony export */   n: () => (/* binding */ normalize),\n/* harmony export */   o: () => (/* binding */ pointToCoordinate),\n/* harmony export */   p: () => (/* binding */ pointOnCubeToPointOnSphere),\n/* harmony export */   q: () => (/* binding */ coordinateToPoint),\n/* harmony export */   r: () => (/* binding */ repeat),\n/* harmony export */   s: () => (/* binding */ planeSegmentIntersection),\n/* harmony export */   t: () => (/* binding */ pointToPlaneDistance),\n/* harmony export */   u: () => (/* binding */ getIndexFrom3D),\n/* harmony export */   v: () => (/* binding */ vectorEquals),\n/* harmony export */   w: () => (/* binding */ get3DFromIndex),\n/* harmony export */   x: () => (/* binding */ getIndexFrom2D),\n/* harmony export */   y: () => (/* binding */ get2DFromIndex)\n/* harmony export */ });\n/* harmony import */ var _triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./triangle-b62b9067.esm.js */ \"(ssr)/./node_modules/maath/dist/triangle-b62b9067.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matrix-baa530bf.esm.js */ \"(ssr)/./node_modules/maath/dist/matrix-baa530bf.esm.js\");\n\n\n\n/**\n * Clamps a value between a range.\n */ function clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n} // Loops the value t, so that it is never larger than length and never smaller than 0.\nfunction repeat(t, length) {\n    return clamp(t - Math.floor(t / length) * length, 0, length);\n} // Calculates the shortest difference between two given angles.\nfunction deltaAngle(current, target) {\n    var delta = repeat(target - current, Math.PI * 2);\n    if (delta > Math.PI) delta -= Math.PI * 2;\n    return delta;\n}\n/**\n * Converts degrees to radians.\n */ function degToRad(degrees) {\n    return degrees / 180 * Math.PI;\n}\n/**\n * Converts radians to degrees.\n */ function radToDeg(radians) {\n    return radians * 180 / Math.PI;\n} // adapted from https://gist.github.com/stephanbogner/a5f50548a06bec723dcb0991dcbb0856 by https://twitter.com/st_phan\nfunction fibonacciOnSphere(buffer, _ref) {\n    var _ref$radius = _ref.radius, radius = _ref$radius === void 0 ? 1 : _ref$radius;\n    var samples = buffer.length / 3;\n    var offset = 2 / samples;\n    var increment = Math.PI * (3 - 2.2360679775);\n    for(var i = 0; i < buffer.length; i += 3){\n        var y = i * offset - 1 + offset / 2;\n        var distance = Math.sqrt(1 - Math.pow(y, 2));\n        var phi = i % samples * increment;\n        var x = Math.cos(phi) * distance;\n        var z = Math.sin(phi) * distance;\n        buffer[i] = x * radius;\n        buffer[i + 1] = y * radius;\n        buffer[i + 2] = z * radius;\n    }\n} // @ts-ignore\nfunction vectorEquals(a, b) {\n    var eps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.EPSILON;\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n}\n/**\n * Sorts vectors in lexicographic order, works with both v2 and v3\n *\n *  Use as:\n *  const sorted = arrayOfVectors.sort(lexicographicOrder)\n */ // https://en.wikipedia.org/wiki/Lexicographic_order\nfunction lexicographic(a, b) {\n    if (a.x === b.x) {\n        // do a check to see if points is 3D,\n        // in which case add y eq check and sort by z\n        if (typeof a.z !== \"undefined\") {\n            if (a.y === b.y) {\n                return a.z - b.z;\n            }\n        }\n        return a.y - b.y;\n    }\n    return a.x - b.x;\n}\n/**\n * Convex Hull\n *\n * Returns an array of 2D Vectors representing the convex hull of a set of 2D Vectors\n */ /**\n * Calculate the convex hull of a set of points\n */ function convexHull(_points) {\n    var points = _points.sort(lexicographic); // put p1 and p2 in a list lUpper with p1 as the first point\n    var lUpper = [\n        points[0],\n        points[1]\n    ]; // for i <- 3 to n\n    for(var i = 2; i < points.length; i++){\n        lUpper.push(points[i]); // while lUpper contains more than 2 points and the last three points in lUpper do not make a right turn\n        while(lUpper.length > 2 && (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)((0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(lUpper.slice(-3)))){\n            // delete the middle of the last three points from lUpper\n            lUpper.splice(lUpper.length - 2, 1);\n        }\n    } // put pn and pn-1 in a list lLower with pn as the first point\n    var lLower = [\n        points[points.length - 1],\n        points[points.length - 2]\n    ]; // for (i <- n - 2 downto 1)\n    for(var _i = points.length - 3; _i >= 0; _i--){\n        // append pi to lLower\n        lLower.push(points[_i]); // while lLower contains more than 2 points and the last three points in lLower do not make a right turn\n        while(lLower.length > 2 && (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__.d)((0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)(lLower.slice(-3)))){\n            // delete the middle of the last three points from lLower\n            lLower.splice(lLower.length - 2, 1);\n        }\n    } // remove the first and last point from lLower to avoid duplication of the points where the upper and lower hull meet\n    lLower.splice(0, 1);\n    lLower.splice(lLower.length - 1, 1); // prettier-ignore\n    var c = [].concat(lUpper, lLower);\n    return c;\n}\nfunction remap(x, _ref2, _ref3) {\n    var _ref4 = (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(_ref2, 2), low1 = _ref4[0], high1 = _ref4[1];\n    var _ref5 = (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(_ref3, 2), low2 = _ref5[0], high2 = _ref5[1];\n    return low2 + (x - low1) * (high2 - low2) / (high1 - low1);\n}\n/**\n *\n * https://www.desmos.com/calculator/vsnmlaljdu\n *\n * Ease-in-out, goes to -Infinite before 0 and Infinite after 1\n *\n * @param t\n * @returns\n */ function fade(t) {\n    return t * t * t * (t * (t * 6 - 15) + 10);\n}\n/**\n *\n * Returns the result of linearly interpolating between input A and input B by input T.\n *\n * @param v0\n * @param v1\n * @param t\n * @returns\n */ function lerp(v0, v1, t) {\n    return v0 * (1 - t) + v1 * t;\n}\n/**\n *\n * Returns the linear parameter that produces the interpolant specified by input T within the range of input A to input B.\n *\n * @param v0\n * @param v1\n * @param t\n * @returns\n */ function inverseLerp(v0, v1, t) {\n    return (t - v0) / (v1 - v0);\n}\n/**\n *\n */ function normalize(x, y, z) {\n    var m = Math.sqrt(x * x + y * y + z * z);\n    return [\n        x / m,\n        y / m,\n        z / m\n    ];\n}\n/**\n *\n */ function pointOnCubeToPointOnSphere(x, y, z) {\n    var x2 = x * x;\n    var y2 = y * y;\n    var z2 = z * z;\n    var nx = x * Math.sqrt(1 - (y2 + z2) / 2 + y2 * z2 / 3);\n    var ny = y * Math.sqrt(1 - (z2 + x2) / 2 + z2 * x2 / 3);\n    var nz = z * Math.sqrt(1 - (x2 + y2) / 2 + x2 * y2 / 3);\n    return [\n        nx,\n        ny,\n        nz\n    ];\n} // https://math.stackexchange.com/questions/180418/calculate-rotation-matrix-to-align-vector-a-to-vector-b-in-3d\n/**\n * Give two unit vectors a and b, returns the transformation matrix that rotates a onto b.\n *\n * */ function rotateVectorOnVector(a, b) {\n    var v = new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().crossVectors(a, b);\n    var c = a.dot(b);\n    var i = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix3().identity(); //  skew-symmetric cross-product matrix of 𝑣 https://en.wikipedia.org/wiki/Skew-symmetric_matrix\n    // prettier-ignore\n    var vx = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix3().set(0, -v.z, v.y, v.z, 0, -v.x, -v.y, v.x, 0);\n    var vxsquared = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix3().multiplyMatrices(vx, vx).multiplyScalar(1 / (1 + c));\n    var _final = (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.a)((0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.a)(i, vx), vxsquared);\n    return _final;\n} // calculate latitude and longitude (in radians) from point on unit sphere\nfunction pointToCoordinate(x, y, z) {\n    var lat = Math.asin(y);\n    var lon = Math.atan2(x, -z);\n    return [\n        lat,\n        lon\n    ];\n} // calculate point on unit sphere given latitude and logitude in radians\nfunction coordinateToPoint(lat, lon) {\n    var y = Math.sin(lat);\n    var r = Math.cos(lat);\n    var x = Math.sin(lon) * r;\n    var z = -Math.cos(lon) * r;\n    return [\n        x,\n        y,\n        z\n    ];\n}\n/**\n * Given a plane and a segment, return the intersection point if it exists or null it doesn't.\n */ function planeSegmentIntersection(plane, segment) {\n    var _segment = (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(segment, 2), a = _segment[0], b = _segment[1];\n    var matrix = rotateVectorOnVector(plane.normal, new three__WEBPACK_IMPORTED_MODULE_2__.Vector3(0, 1, 0));\n    var t = inverseLerp(a.clone().applyMatrix3(matrix).y, b.clone().applyMatrix3(matrix).y, 0);\n    return new three__WEBPACK_IMPORTED_MODULE_2__.Vector3().lerpVectors(a, b, t);\n}\n/**\n * Given a plane and a point, return the distance.\n */ function pointToPlaneDistance(p, plane) {\n    var d = plane.normal.dot(p); // TODO\n    return d;\n}\nfunction getIndexFrom3D(coords, sides) {\n    var _coords = (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(coords, 3), ix = _coords[0], iy = _coords[1], iz = _coords[2];\n    var _sides = (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(sides, 2), rx = _sides[0], ry = _sides[1];\n    return iz * rx * ry + iy * rx + ix;\n}\nfunction get3DFromIndex(index, size) {\n    var _size = (0,_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(size, 2), rx = _size[0], ry = _size[1];\n    var a = rx * ry;\n    var z = index / a;\n    var b = index - a * z;\n    var y = b / rx;\n    var x = b % rx;\n    return [\n        x,\n        y,\n        z\n    ];\n}\nfunction getIndexFrom2D(coords, size) {\n    return coords[0] + size[0] * coords[1];\n}\nfunction get2DFromIndex(index, columns) {\n    var x = index % columns;\n    var y = Math.floor(index / columns);\n    return [\n        x,\n        y\n    ];\n}\nvar misc = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    clamp: clamp,\n    repeat: repeat,\n    deltaAngle: deltaAngle,\n    degToRad: degToRad,\n    radToDeg: radToDeg,\n    fibonacciOnSphere: fibonacciOnSphere,\n    vectorEquals: vectorEquals,\n    lexicographic: lexicographic,\n    convexHull: convexHull,\n    remap: remap,\n    fade: fade,\n    lerp: lerp,\n    inverseLerp: inverseLerp,\n    normalize: normalize,\n    pointOnCubeToPointOnSphere: pointOnCubeToPointOnSphere,\n    rotateVectorOnVector: rotateVectorOnVector,\n    pointToCoordinate: pointToCoordinate,\n    coordinateToPoint: coordinateToPoint,\n    planeSegmentIntersection: planeSegmentIntersection,\n    pointToPlaneDistance: pointToPlaneDistance,\n    getIndexFrom3D: getIndexFrom3D,\n    get3DFromIndex: get3DFromIndex,\n    getIndexFrom2D: getIndexFrom2D,\n    get2DFromIndex: get2DFromIndex\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/misc-19a3ec46.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/objectSpread2-284232a6.esm.js":
/*!***************************************************************!*\
  !*** ./node_modules/maath/dist/objectSpread2-284232a6.esm.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _objectSpread2),\n/* harmony export */   a: () => (/* binding */ _defineProperty)\n/* harmony export */ });\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _objectSpread2(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        if (i % 2) {\n            ownKeys(Object(source), true).forEach(function(key) {\n                _defineProperty(target, key, source[key]);\n            });\n        } else if (Object.getOwnPropertyDescriptors) {\n            Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n        } else {\n            ownKeys(Object(source)).forEach(function(key) {\n                Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n            });\n        }\n    }\n    return target;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvZGlzdC9vYmplY3RTcHJlYWQyLTI4NDIzMmE2LmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLFNBQVNBLGdCQUFnQkMsR0FBRyxFQUFFQyxHQUFHLEVBQUVDLEtBQUs7SUFDdEMsSUFBSUQsT0FBT0QsS0FBSztRQUNkRyxPQUFPQyxjQUFjLENBQUNKLEtBQUtDLEtBQUs7WUFDOUJDLE9BQU9BO1lBQ1BHLFlBQVk7WUFDWkMsY0FBYztZQUNkQyxVQUFVO1FBQ1o7SUFDRixPQUFPO1FBQ0xQLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHQztJQUNiO0lBRUEsT0FBT0Y7QUFDVDtBQUVBLFNBQVNRLFFBQVFDLE1BQU0sRUFBRUMsY0FBYztJQUNyQyxJQUFJQyxPQUFPUixPQUFPUSxJQUFJLENBQUNGO0lBRXZCLElBQUlOLE9BQU9TLHFCQUFxQixFQUFFO1FBQ2hDLElBQUlDLFVBQVVWLE9BQU9TLHFCQUFxQixDQUFDSDtRQUUzQyxJQUFJQyxnQkFBZ0I7WUFDbEJHLFVBQVVBLFFBQVFDLE1BQU0sQ0FBQyxTQUFVQyxHQUFHO2dCQUNwQyxPQUFPWixPQUFPYSx3QkFBd0IsQ0FBQ1AsUUFBUU0sS0FBS1YsVUFBVTtZQUNoRTtRQUNGO1FBRUFNLEtBQUtNLElBQUksQ0FBQ0MsS0FBSyxDQUFDUCxNQUFNRTtJQUN4QjtJQUVBLE9BQU9GO0FBQ1Q7QUFFQSxTQUFTUSxlQUFlQyxNQUFNO0lBQzVCLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJQyxVQUFVQyxNQUFNLEVBQUVGLElBQUs7UUFDekMsSUFBSUcsU0FBU0YsU0FBUyxDQUFDRCxFQUFFLElBQUksT0FBT0MsU0FBUyxDQUFDRCxFQUFFLEdBQUcsQ0FBQztRQUVwRCxJQUFJQSxJQUFJLEdBQUc7WUFDVGIsUUFBUUwsT0FBT3FCLFNBQVMsTUFBTUMsT0FBTyxDQUFDLFNBQVV4QixHQUFHO2dCQUNqREYsZ0JBQWdCcUIsUUFBUW5CLEtBQUt1QixNQUFNLENBQUN2QixJQUFJO1lBQzFDO1FBQ0YsT0FBTyxJQUFJRSxPQUFPdUIseUJBQXlCLEVBQUU7WUFDM0N2QixPQUFPd0IsZ0JBQWdCLENBQUNQLFFBQVFqQixPQUFPdUIseUJBQXlCLENBQUNGO1FBQ25FLE9BQU87WUFDTGhCLFFBQVFMLE9BQU9xQixTQUFTQyxPQUFPLENBQUMsU0FBVXhCLEdBQUc7Z0JBQzNDRSxPQUFPQyxjQUFjLENBQUNnQixRQUFRbkIsS0FBS0UsT0FBT2Esd0JBQXdCLENBQUNRLFFBQVF2QjtZQUM3RTtRQUNGO0lBQ0Y7SUFFQSxPQUFPbUI7QUFDVDtBQUVxRCIsInNvdXJjZXMiOlsid2VicGFjazovL1VQdGhyaWZ0Ly4vbm9kZV9tb2R1bGVzL21hYXRoL2Rpc3Qvb2JqZWN0U3ByZWFkMi0yODQyMzJhNi5lc20uanM/OTRiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIG9iajtcbn1cblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7XG4gIHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTtcblxuICBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scykge1xuICAgIHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpO1xuXG4gICAgaWYgKGVudW1lcmFibGVPbmx5KSB7XG4gICAgICBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTtcbiAgfVxuXG4gIHJldHVybiBrZXlzO1xufVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkMih0YXJnZXQpIHtcbiAgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTtcblxuICAgIGlmIChpICUgMikge1xuICAgICAgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pO1xuICAgICAgfSk7XG4gICAgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykge1xuICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpO1xuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHRhcmdldDtcbn1cblxuZXhwb3J0IHsgX29iamVjdFNwcmVhZDIgYXMgXywgX2RlZmluZVByb3BlcnR5IGFzIGEgfTtcbiJdLCJuYW1lcyI6WyJfZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImNvbmZpZ3VyYWJsZSIsIndyaXRhYmxlIiwib3duS2V5cyIsIm9iamVjdCIsImVudW1lcmFibGVPbmx5Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsInN5bWJvbHMiLCJmaWx0ZXIiLCJzeW0iLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkMiIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJmb3JFYWNoIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyIsImRlZmluZVByb3BlcnRpZXMiLCJfIiwiYSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/objectSpread2-284232a6.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/dist/triangle-b62b9067.esm.js":
/*!**********************************************************!*\
  !*** ./node_modules/maath/dist/triangle-b62b9067.esm.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ _slicedToArray),\n/* harmony export */   a: () => (/* binding */ _toConsumableArray),\n/* harmony export */   b: () => (/* binding */ triangleDeterminant),\n/* harmony export */   c: () => (/* binding */ arePointsCollinear),\n/* harmony export */   d: () => (/* binding */ doThreePointsMakeARight),\n/* harmony export */   e: () => (/* binding */ isTriangleClockwise),\n/* harmony export */   f: () => (/* binding */ isPointInCircumcircle),\n/* harmony export */   g: () => (/* binding */ getCircumcircle),\n/* harmony export */   i: () => (/* binding */ isPointInTriangle),\n/* harmony export */   t: () => (/* binding */ triangle)\n/* harmony export */ });\n/* harmony import */ var _isNativeReflectConstruct_5594d075_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isNativeReflectConstruct-5594d075.esm.js */ \"(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-5594d075.esm.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/three/build/three.module.js\");\n/* harmony import */ var _matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./matrix-baa530bf.esm.js */ \"(ssr)/./node_modules/maath/dist/matrix-baa530bf.esm.js\");\n\n\n\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _construct(Parent, args, Class) {\n    if ((0,_isNativeReflectConstruct_5594d075_esm_js__WEBPACK_IMPORTED_MODULE_0__.a)()) {\n        _construct = Reflect.construct;\n    } else {\n        _construct = function _construct(Parent, args, Class) {\n            var a = [\n                null\n            ];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n            if (Class) (0,_isNativeReflectConstruct_5594d075_esm_js__WEBPACK_IMPORTED_MODULE_0__._)(instance, Class.prototype);\n            return instance;\n        };\n    }\n    return _construct.apply(null, arguments);\n}\n/**\n *\n * @param point\n *\n * @param triangle\n *\n * @returns {boolean} true if the point is in the triangle\n *\n * TODO: Find explainer\n */ function isPointInTriangle(point, triangle) {\n    var _triangle$ = _slicedToArray(triangle[0], 2), ax = _triangle$[0], ay = _triangle$[1];\n    var _triangle$2 = _slicedToArray(triangle[1], 2), bx = _triangle$2[0], by = _triangle$2[1];\n    var _triangle$3 = _slicedToArray(triangle[2], 2), cx = _triangle$3[0], cy = _triangle$3[1];\n    var _point = _slicedToArray(point, 2), px = _point[0], py = _point[1]; // TODO Sub with static calc\n    var matrix = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4(); // prettier-ignore\n    matrix.set(ax, ay, ax * ax + ay * ay, 1, bx, by, bx * bx + by * by, 1, cx, cy, cx * cx + cy * cy, 1, px, py, px * px + py * py, 1);\n    return matrix.determinant() <= 0;\n}\nfunction triangleDeterminant(triangle) {\n    var _triangle$4 = _slicedToArray(triangle[0], 2), x1 = _triangle$4[0], y1 = _triangle$4[1];\n    var _triangle$5 = _slicedToArray(triangle[1], 2), x2 = _triangle$5[0], y2 = _triangle$5[1];\n    var _triangle$6 = _slicedToArray(triangle[2], 2), x3 = _triangle$6[0], y3 = _triangle$6[1]; // prettier-ignore\n    return (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(x1, y1, 1, x2, y2, 1, x3, y3, 1);\n}\n/**\n * Uses triangle area determinant to check if 3 points are collinear.\n * If they are, they can't make a triangle, so the determinant will be 0!\n *\n *      0     1     2\n * ─────■─────■─────■\n *\n *\n * Fun fact, you can use this same determinant to check the order of the points in the triangle\n *\n * NOTE: Should this use a buffer instead? NOTE: Should this use a buffer instead? [x0, y0, x1, y1, x2, y2]?\n *\n */ function arePointsCollinear(points) {\n    return triangleDeterminant(points) === 0;\n} // TODO This is the same principle as the prev function, find a way to make it have sense\nfunction isTriangleClockwise(triangle) {\n    return triangleDeterminant(triangle) < 0;\n}\n/**\n \nThe circumcircle is a circle touching all the vertices of a triangle or polygon.\n\n             ┌───┐             \n             │ B │             \n             └───┘             \n           .───●───.           \n        ,─'   ╱ ╲   '─.        \n      ,'     ╱   ╲     `.      \n     ╱      ╱     ╲      ╲     \n    ;      ╱       ╲      :    \n    │     ╱         ╲     │    \n    │    ╱           ╲    │    \n    :   ╱             ╲   ;    \n     ╲ ╱               ╲ ╱     \n┌───┐ ●─────────────────● ┌───┐\n│ A │  `.             ,'  │ C │\n└───┘    '─.       ,─'    └───┘\n            `─────'                         \n */ /**\n *\n * @param triangle\n *\n * @returns {number} circumcircle\n */ // https://math.stackexchange.com/a/1460096\nfunction getCircumcircle(triangle) {\n    // TS-TODO the next few lines are ignored because the types aren't current to the change in vectors (that can now be iterated)\n    // @ts-ignore\n    var _triangle$7 = _slicedToArray(triangle[0], 2), ax = _triangle$7[0], ay = _triangle$7[1]; // @ts-ignore\n    var _triangle$8 = _slicedToArray(triangle[1], 2), bx = _triangle$8[0], by = _triangle$8[1]; // @ts-ignore\n    var _triangle$9 = _slicedToArray(triangle[2], 2), cx = _triangle$9[0], cy = _triangle$9[1];\n    if (arePointsCollinear(triangle)) return null; // points are collinear\n    var m = new three__WEBPACK_IMPORTED_MODULE_2__.Matrix4(); // prettier-ignore\n    m.set(1, 1, 1, 1, ax * ax + ay * ay, ax, ay, 1, bx * bx + by * by, bx, by, 1, cx * cx + cy * cy, cx, cy, 1);\n    var m11 = (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(m, 1, 1);\n    var m13 = (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(m, 1, 3);\n    var m12 = (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(m, 1, 2);\n    var m14 = (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.g)(m, 1, 4);\n    var x0 = 0.5 * (m12 / m11);\n    var y0 = 0.5 * (m13 / m11);\n    var r2 = x0 * x0 + y0 * y0 + m14 / m11;\n    return {\n        x: Math.abs(x0) === 0 ? 0 : x0,\n        y: Math.abs(y0) === 0 ? 0 : -y0,\n        r: Math.sqrt(r2)\n    };\n} // https://stackoverflow.com/questions/39984709/how-can-i-check-wether-a-point-is-inside-the-circumcircle-of-3-points\nfunction isPointInCircumcircle(point, triangle) {\n    var _ref = Array.isArray(triangle[0]) ? triangle[0] : triangle[0].toArray(), _ref2 = _slicedToArray(_ref, 2), ax = _ref2[0], ay = _ref2[1];\n    var _ref3 = Array.isArray(triangle[1]) ? triangle[1] : triangle[1].toArray(), _ref4 = _slicedToArray(_ref3, 2), bx = _ref4[0], by = _ref4[1];\n    var _ref5 = Array.isArray(triangle[2]) ? triangle[2] : triangle[2].toArray(), _ref6 = _slicedToArray(_ref5, 2), cx = _ref6[0], cy = _ref6[1];\n    var _point2 = _slicedToArray(point, 2), px = _point2[0], py = _point2[1];\n    if (arePointsCollinear(triangle)) throw new Error(\"Collinear points don't form a triangle\");\n    /**\n          | ax-px, ay-py, (ax-px)² + (ay-py)² |\n    det = | bx-px, by-py, (bx-px)² + (by-py)² |\n          | cx-px, cy-py, (cx-px)² + (cy-py)² |\n  */ var x1mpx = ax - px;\n    var aympy = ay - py;\n    var bxmpx = bx - px;\n    var bympy = by - py;\n    var cxmpx = cx - px;\n    var cympy = cy - py; // prettier-ignore\n    var d = (0,_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_1__.d)(x1mpx, aympy, x1mpx * x1mpx + aympy * aympy, bxmpx, bympy, bxmpx * bxmpx + bympy * bympy, cxmpx, cympy, cxmpx * cxmpx + cympy * cympy); // if d is 0, the point is on C\n    if (d === 0) {\n        return true;\n    }\n    return !isTriangleClockwise(triangle) ? d > 0 : d < 0;\n} // From https://algorithmtutor.com/Computational-Geometry/Determining-if-two-consecutive-segments-turn-left-or-right/\nvar mv1 = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\nvar mv2 = new three__WEBPACK_IMPORTED_MODULE_2__.Vector2();\n/**\n \n     ╱      ╲     \n    ╱        ╲    \n   ▕          ▏   \n                  \n right      left  \n\n * NOTE: Should this use a buffer instead? [x0, y0, x1, y1]?\n */ function doThreePointsMakeARight(points) {\n    var _points$map = points.map(function(p) {\n        if (Array.isArray(p)) {\n            return _construct(three__WEBPACK_IMPORTED_MODULE_2__.Vector2, _toConsumableArray(p));\n        }\n        return p;\n    }), _points$map2 = _slicedToArray(_points$map, 3), p1 = _points$map2[0], p2 = _points$map2[1], p3 = _points$map2[2];\n    if (arePointsCollinear(points)) return false; // @ts-ignore\n    var p2p1 = mv1.subVectors(p2, p1); // @ts-ignore\n    var p3p1 = mv2.subVectors(p3, p1);\n    var cross = p3p1.cross(p2p1);\n    return cross > 0;\n}\nvar triangle = /*#__PURE__*/ Object.freeze({\n    __proto__: null,\n    isPointInTriangle: isPointInTriangle,\n    triangleDeterminant: triangleDeterminant,\n    arePointsCollinear: arePointsCollinear,\n    isTriangleClockwise: isTriangleClockwise,\n    getCircumcircle: getCircumcircle,\n    isPointInCircumcircle: isPointInCircumcircle,\n    doThreePointsMakeARight: doThreePointsMakeARight\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/dist/triangle-b62b9067.esm.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/maath/random/dist/maath-random.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/maath/random/dist/maath-random.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FlashGen: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.F),\n/* harmony export */   Generator: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.G),\n/* harmony export */   inBox: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.f),\n/* harmony export */   inCircle: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.b),\n/* harmony export */   inRect: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.d),\n/* harmony export */   inSphere: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.a),\n/* harmony export */   noise: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.n),\n/* harmony export */   onBox: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.g),\n/* harmony export */   onCircle: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.c),\n/* harmony export */   onRect: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.e),\n/* harmony export */   onSphere: () => (/* reexport safe */ _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__.o)\n/* harmony export */ });\n/* harmony import */ var _dist_objectSpread2_284232a6_esm_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dist/objectSpread2-284232a6.esm.js */ \"(ssr)/./node_modules/maath/dist/objectSpread2-284232a6.esm.js\");\n/* harmony import */ var _dist_classCallCheck_9098b006_esm_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dist/classCallCheck-9098b006.esm.js */ \"(ssr)/./node_modules/maath/dist/classCallCheck-9098b006.esm.js\");\n/* harmony import */ var _dist_index_0332b2ed_esm_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../dist/index-0332b2ed.esm.js */ \"(ssr)/./node_modules/maath/dist/index-0332b2ed.esm.js\");\n/* harmony import */ var _dist_misc_19a3ec46_esm_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../dist/misc-19a3ec46.esm.js */ \"(ssr)/./node_modules/maath/dist/misc-19a3ec46.esm.js\");\n/* harmony import */ var _dist_triangle_b62b9067_esm_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../dist/triangle-b62b9067.esm.js */ \"(ssr)/./node_modules/maath/dist/triangle-b62b9067.esm.js\");\n/* harmony import */ var _dist_isNativeReflectConstruct_5594d075_esm_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../dist/isNativeReflectConstruct-5594d075.esm.js */ \"(ssr)/./node_modules/maath/dist/isNativeReflectConstruct-5594d075.esm.js\");\n/* harmony import */ var _dist_matrix_baa530bf_esm_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../dist/matrix-baa530bf.esm.js */ \"(ssr)/./node_modules/maath/dist/matrix-baa530bf.esm.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbWFhdGgvcmFuZG9tL2Rpc3QvbWFhdGgtcmFuZG9tLmVzbS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBa0Q7QUFDQztBQUN3SjtBQUNsSztBQUNJO0FBQ2dCO0FBQzlDO0FBQzRCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vVVB0aHJpZnQvLi9ub2RlX21vZHVsZXMvbWFhdGgvcmFuZG9tL2Rpc3QvbWFhdGgtcmFuZG9tLmVzbS5qcz85MzdhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAnLi4vLi4vZGlzdC9vYmplY3RTcHJlYWQyLTI4NDIzMmE2LmVzbS5qcyc7XG5pbXBvcnQgJy4uLy4uL2Rpc3QvY2xhc3NDYWxsQ2hlY2stOTA5OGIwMDYuZXNtLmpzJztcbmV4cG9ydCB7IEYgYXMgRmxhc2hHZW4sIEcgYXMgR2VuZXJhdG9yLCBmIGFzIGluQm94LCBiIGFzIGluQ2lyY2xlLCBkIGFzIGluUmVjdCwgYSBhcyBpblNwaGVyZSwgbiBhcyBub2lzZSwgZyBhcyBvbkJveCwgYyBhcyBvbkNpcmNsZSwgZSBhcyBvblJlY3QsIG8gYXMgb25TcGhlcmUgfSBmcm9tICcuLi8uLi9kaXN0L2luZGV4LTAzMzJiMmVkLmVzbS5qcyc7XG5pbXBvcnQgJy4uLy4uL2Rpc3QvbWlzYy0xOWEzZWM0Ni5lc20uanMnO1xuaW1wb3J0ICcuLi8uLi9kaXN0L3RyaWFuZ2xlLWI2MmI5MDY3LmVzbS5qcyc7XG5pbXBvcnQgJy4uLy4uL2Rpc3QvaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0LTU1OTRkMDc1LmVzbS5qcyc7XG5pbXBvcnQgJ3RocmVlJztcbmltcG9ydCAnLi4vLi4vZGlzdC9tYXRyaXgtYmFhNTMwYmYuZXNtLmpzJztcbiJdLCJuYW1lcyI6WyJGIiwiRmxhc2hHZW4iLCJHIiwiR2VuZXJhdG9yIiwiZiIsImluQm94IiwiYiIsImluQ2lyY2xlIiwiZCIsImluUmVjdCIsImEiLCJpblNwaGVyZSIsIm4iLCJub2lzZSIsImciLCJvbkJveCIsImMiLCJvbkNpcmNsZSIsImUiLCJvblJlY3QiLCJvIiwib25TcGhlcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/maath/random/dist/maath-random.esm.js\n");

/***/ })

};
;